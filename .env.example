# ====================================
# Music Agent Configuration
# ====================================

# Agent settings
AGENT_NAME="Music Discovery Agent"
AGENT_CACHE_DIR="./cache"

# Database (SQLite for development)
DATABASE_URL="sqlite:///./music_agent.db"

# ====================================
# AI Model Configuration
# ====================================

# OpenAI (Primary)
OPENAI_API_KEY="sk-your-openai-key-here"
OPENAI_MODEL="gpt-4o-mini"

# AWS Bedrock (Future use)
AWS_ACCESS_KEY_ID="your-aws-access-key"
AWS_SECRET_ACCESS_KEY="your-aws-secret-key"  
AWS_REGION="us-east-1"
BEDROCK_MODEL_ID="anthropic.claude-3-haiku-20240307-v1:0"

# ====================================
# Music Service Authentication
# ====================================

# Deezer Authentication
# Get ARL cookie from browser after logging into Deezer
# Run: uv run auth-deezer
DEEZER_ARL="your-deezer-arl-cookie-here"

# Spotify Authentication  
# Your Spotify username/email and password
# Run: uv run auth-spotify
SPOTIFY_USERNAME="your-spotify-username"
SPOTIFY_PASSWORD="your-spotify-password"
SPOTIFY_TOTP_SECRET="your-2fa-secret-if-enabled"

# YouTube Authentication
# Path to cookies file exported from browser
# Run: uv run auth-youtube
YOUTUBE_COOKIES_FILE="./youtube_cookies.txt"

# ====================================
# Quick Start Guide
# ====================================

# To get started:
# 1. Copy this file to .env: cp .env.example .env
# 2. Add your OpenAI API key above
# 3. Run authentication helpers:
#    - uv run auth-deezer    (for Deezer)
#    - uv run auth-spotify   (for Spotify)  
#    - uv run auth-youtube   (for YouTube)
# 4. Start the agent:
#    - uv run start
#
# Available uv commands:
# - uv run start           # Start the music agent CLI
# - uv run test            # Run tests
# - uv run lint            # Check code quality
# - uv run agent-status    # Check agent status
# - uv run test-all-services # Test all music services
#
# For development:
# - uv run install-dev     # Install with dev dependencies
# - uv run check-all       # Run all quality checks
# - uv run clean           # Clean up build artifacts

# ====================================
# Optional Advanced Settings
# ====================================

# Logging
LOG_LEVEL="INFO"  # DEBUG, INFO, WARNING, ERROR
LOG_FILE="./logs/music_agent.log"

# Performance
MAX_SEARCH_RESULTS=20
REQUEST_TIMEOUT=30
CONCURRENT_REQUESTS=5

# Cache settings
ENABLE_CACHING=true
CACHE_EXPIRY_HOURS=24

# Audio preferences
PREFERRED_AUDIO_QUALITY="320"  # 128, 320, FLAC
DEFAULT_DOWNLOAD_FORMAT="mp3"

# Feature flags
ENABLE_DOWNLOADS=true
ENABLE_CROSS_PLATFORM_SEARCH=true
ENABLE_ANALYTICS=true